// Top-level build file where you can add configuration options common to all sub-projects/modules.
// Gradle加载顺序: 1.settings.gradle    2.project的gradle    3.依次每个module的gradle

// 定义了 Android 编译工具的类路径, repositories中的jCenter是一个著名的 Maven 仓库(bintray.com维护)
buildscript {
    // 仓库
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
    // 依赖, 一般依赖的库名都是 组名:库名:版本号, 其中版本号可以使用通配符保证获取最新如2.2.1 -> 2.2.+ / 2.2+ / +
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.1'
        // realm插件
        classpath 'io.realm:realm-gradle-plugin:2.2.1'
        // retrolambda
        classpath 'me.tatarka:gradle-retrolambda:3.4.0'
        // Butterknife
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        //GreenDao
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.1'
    }
}

// 其中定义的属性会被应用到所有moudle中, 一般我们的project就一个
allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.google.com' }
    }
}

// 统一配置版本号, 使用rootProject.ext.android / dependencies.xxx
ext {
    android = [
            compileSdkVersion: 25,
            buildToolsVersion: '25.0.3',
            minSdkVersion    : 18,
            targetSdkVersion : 25
    ]

    dependencies = [
            supportv4      : 'com.android.support:support-v4:25.3.1',
            appcompatv7    : 'com.android.support:appcompat-v7:25.3.1',
            recyclerview   : 'com.android.support:recyclerview-v7:25.3.1',
            cardview       : 'com.android.support:cardview-v7:25.3.1',
            design         : 'com.android.support:design:25.3.1',
            vector_drawable: 'com.android.support:support-vector-drawable:25.3.1',
            testCompile    : 'junit:junit:4.12',
            constraint     : 'com.android.support.constraint:constraint-layout:1.0.2',
            xUtils         : 'org.xutils:xutils:3.5.0',
            imageloader    : 'com.nostra13.universalimageloader:universal-image-loader:1.9.5',
            glide          : 'com.github.bumptech.glide:glide:4.1.1',
            glidePro       : 'com.github.bumptech.glide:compiler:4.1.1'
    ]
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// 添加一个task, 编译后即 Gradle视图下的root/Tasks/other/hello
task hello {
    println 'Hello Hello'
}

// 表示该task在执行阶段才会执行任务, 上面的编译过程直接执行
task helloworld << {
    println 'Hello World'
}
